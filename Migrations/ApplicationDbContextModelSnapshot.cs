// <auto-generated />
using System;
using KaseyWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KaseyWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KaseyWebApi.DataModel.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("EmployeeId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("BirthDate")
                        .IsUnicode(false)
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime>("HireDate")
                        .IsUnicode(false)
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LoginId")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1)");

                    b.Property<DateTime>("ModifiedDate")
                        .IsUnicode(false)
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NationalIdNumber")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("character varying(25)");

                    b.Property<Guid?>("RowGuid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("uuid");

                    b.Property<short>("SickLeaveHours")
                        .IsUnicode(false)
                        .HasColumnType("smallint");

                    b.Property<short>("VacationHours")
                        .IsUnicode(false)
                        .HasColumnType("smallint");

                    b.HasKey("EmployeeId");

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 9,
                            BirthDate = new DateTime(1993, 6, 22, 5, 0, 0, 0, DateTimeKind.Utc),
                            EmployeeName = "Kasey Cantu",
                            Gender = "M",
                            HireDate = new DateTime(2018, 8, 9, 5, 0, 0, 0, DateTimeKind.Utc),
                            JobTitle = "Software Engieer",
                            LoginId = "shipengine-kasey",
                            MaritalStatus = "M",
                            ModifiedDate = new DateTime(2022, 5, 27, 5, 0, 0, 0, DateTimeKind.Utc),
                            NationalIdNumber = "8989898989898989",
                            RowGuid = new Guid("cc8916e7-2d08-48a6-b5a3-ed71412e1346"),
                            SickLeaveHours = (short)300,
                            VacationHours = (short)500
                        });
                });

            modelBuilder.Entity("KaseyWebApi.DataModel.Link", b =>
                {
                    b.Property<string>("LinkId")
                        .HasColumnType("text")
                        .HasColumnName("LinkId");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("LinkUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.HasKey("LinkId");

                    b.ToTable("links");

                    b.HasData(
                        new
                        {
                            LinkId = "d8d854e7-26bc-4df7-a2ed-580c6d6eeb02",
                            CreatedAt = "7/2/2022 12:12:21 AM",
                            Description = "Search Engine",
                            LinkUrl = "https://google.com",
                            Topic = "Learning"
                        });
                });

            modelBuilder.Entity("KaseyWebApi.DataModel.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedDate")
                        .IsUnicode(false)
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)");

                    b.HasKey("UserId");

                    b.ToTable("userInfo");

                    b.HasData(
                        new
                        {
                            UserId = 7,
                            CreatedDate = new DateTime(2022, 7, 2, 5, 12, 21, 223, DateTimeKind.Utc).AddTicks(8650),
                            DisplayName = "KPC",
                            Email = "kaseypaulcantu@gmail.com",
                            Password = "password321",
                            UserName = "KaseyPCantu"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
